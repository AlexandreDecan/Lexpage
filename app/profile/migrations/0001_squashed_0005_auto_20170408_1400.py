# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2017-12-06 09:35
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('profile', '0001_initial'), ('profile', '0002_auto_20151107_1548'), ('profile', '0003_profile_theme'), ('profile', '0004_auto_20151222_1053'), ('profile', '0005_auto_20170408_1400')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivationKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=40, verbose_name='activation_key')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': "Clés d'activation",
                'verbose_name': "Clé d'activation",
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Homme'), ('F', 'Femme')], max_length=1, verbose_name='Genre')),
                ('country', models.IntegerField(blank=True, choices=[(1, 'Afghanistan'), (2, 'Afrique du Sud'), (3, 'Akrotiri'), (4, 'Albanie'), (5, 'Algérie'), (6, 'Allemagne'), (7, 'Andorre'), (8, 'Angola'), (9, 'Anguilla'), (10, 'Antarctique'), (11, 'Antigua-et-Barbuda'), (12, 'Antilles néerlandaises'), (13, 'Arabie saoudite'), (14, 'Arctic Ocean'), (15, 'Argentine'), (16, 'Arménie'), (17, 'Aruba'), (18, 'Ashmore and Cartier Islands'), (19, 'Atlantic Ocean'), (20, 'Australie'), (21, 'Autriche'), (22, 'Azerbaïdjan'), (23, 'Bahamas'), (24, 'Bahreïn'), (25, 'Bangladesh'), (26, 'Barbade'), (27, 'Belau'), (28, 'Belgique'), (29, 'Belize'), (30, 'Bénin'), (31, 'Bermudes'), (32, 'Bhoutan'), (33, 'Biélorussie'), (34, 'Birmanie'), (35, 'Bolivie'), (36, 'Bosnie-Herzégovine'), (37, 'Botswana'), (38, 'Brésil'), (39, 'Brunei'), (40, 'Bulgarie'), (41, 'Burkina Faso'), (42, 'Burundi'), (43, 'Cambodge'), (44, 'Cameroun'), (45, 'Canada'), (46, 'Cap-Vert'), (47, 'Chili'), (48, 'Chine'), (49, 'Chypre'), (50, 'Clipperton Island'), (51, 'Colombie'), (52, 'Comores'), (53, 'Congo'), (54, 'Coral Sea Islands'), (55, 'Corée du Nord'), (56, 'Corée du Sud'), (57, 'Costa Rica'), (58, "Côte d'Ivoire"), (59, 'Croatie'), (60, 'Cuba'), (61, 'Danemark'), (62, 'Dhekelia'), (63, 'Djibouti'), (64, 'Dominique'), (65, 'Égypte'), (66, 'Émirats arabes unis'), (67, 'Équateur'), (68, 'Érythrée'), (69, 'Espagne'), (70, 'Estonie'), (71, 'États-Unis'), (72, 'Éthiopie'), (73, 'ex-République yougoslave de Macédoine'), (74, 'Finlande'), (75, 'France'), (76, 'Gabon'), (77, 'Gambie'), (78, 'Gaza Strip'), (79, 'Géorgie'), (80, 'Ghana'), (81, 'Gibraltar'), (82, 'Grèce'), (83, 'Grenade'), (84, 'Groenland'), (85, 'Guam'), (86, 'Guatemala'), (87, 'Guernsey'), (88, 'Guinée'), (89, 'Guinée équatoriale'), (90, 'Guinée-Bissao'), (91, 'Guyana'), (92, 'Haïti'), (93, 'Honduras'), (94, 'Hong Kong'), (95, 'Hongrie'), (96, 'Ile Bouvet'), (97, 'Ile Christmas'), (98, 'Ile Norfolk'), (99, 'Iles Cayman'), (100, 'Iles Cook'), (101, 'Iles des Cocos (Keeling)'), (102, 'Iles Falkland'), (103, 'Iles Féroé'), (104, 'Iles Fidji'), (105, 'Iles Géorgie du Sud et Sandwich du Sud'), (106, 'Iles Heard et McDonald'), (107, 'Iles Marshall'), (108, 'Iles Pitcairn'), (109, 'Iles Salomon'), (110, 'Iles Svalbard et Jan Mayen'), (111, 'Iles Turks-et-Caicos'), (112, 'Iles Vierges américaines'), (113, 'Iles Vierges britanniques'), (114, 'Inde'), (115, 'Indian Ocean'), (116, 'Indonésie'), (117, 'Iran'), (118, 'Iraq'), (119, 'Irlande'), (120, 'Islande'), (121, 'Israël'), (122, 'Italie'), (123, 'Jamaïque'), (124, 'Jan Mayen'), (125, 'Japon'), (126, 'Jersey'), (127, 'Jordanie'), (128, 'Kazakhstan'), (129, 'Kenya'), (130, 'Kirghizistan'), (131, 'Kiribati'), (132, 'Koweït'), (133, 'Laos'), (134, 'Lesotho'), (135, 'Lettonie'), (136, 'Liban'), (137, 'Liberia'), (138, 'Libye'), (139, 'Liechtenstein'), (140, 'Lituanie'), (141, 'Luxembourg'), (142, 'Macao'), (143, 'Madagascar'), (144, 'Malaisie'), (145, 'Malawi'), (146, 'Maldives'), (147, 'Mali'), (148, 'Malte'), (149, 'Man, Isle of'), (150, 'Mariannes du Nord'), (151, 'Maroc'), (152, 'Maurice'), (153, 'Mauritanie'), (154, 'Mayotte'), (155, 'Mexique'), (156, 'Micronésie'), (157, 'Moldavie'), (158, 'Monaco'), (159, 'Monde'), (160, 'Mongolie'), (161, 'Monténégro'), (162, 'Montserrat'), (163, 'Mozambique'), (164, 'Namibie'), (165, 'Nauru'), (166, 'Navassa Island'), (167, 'Népal'), (168, 'Nicaragua'), (169, 'Niger'), (170, 'Nigeria'), (171, 'Nioué'), (172, 'Norvège'), (173, 'Nouvelle-Calédonie'), (174, 'Nouvelle-Zélande'), (175, 'Oman'), (176, 'Ouganda'), (177, 'Ouzbékistan'), (178, 'Pacific Ocean'), (179, 'Pakistan'), (180, 'Panama'), (181, 'Papouasie-Nouvelle-Guinée'), (182, 'Paracel Islands'), (183, 'Paraguay'), (184, 'Pays-Bas'), (185, 'Pérou'), (186, 'Philippines'), (187, 'Pologne'), (188, 'Polynésie française'), (189, 'Porto Rico'), (190, 'Portugal'), (191, 'Qatar'), (192, 'République centrafricaine'), (193, 'République démocratique du Congo'), (194, 'République dominicaine'), (195, 'République tchèque'), (196, 'Roumanie'), (197, 'Royaume-Uni'), (198, 'Russie'), (199, 'Rwanda'), (200, 'Sahara occidental'), (201, 'Saint-Christophe-et-Niévès'), (202, 'Sainte-Hélène'), (203, 'Sainte-Lucie'), (204, 'Saint-Marin'), (205, 'Saint-Pierre-et-Miquelon'), (206, 'Saint-Siège'), (207, 'Saint-Vincent-et-les-Grenadines'), (208, 'Salvador'), (209, 'Samoa'), (210, 'Samoa américaines'), (211, 'Sao Tomé-et-Principe'), (212, 'Sénégal'), (213, 'Serbie'), (214, 'Seychelles'), (215, 'Sierra Leone'), (216, 'Singapour'), (217, 'Slovaquie'), (218, 'Slovénie'), (219, 'Somalie'), (220, 'Soudan'), (221, 'Southern Ocean'), (222, 'Spratly Islands'), (223, 'Sri Lanka'), (224, 'Suède'), (225, 'Suisse'), (226, 'Suriname'), (227, 'Swaziland'), (228, 'Syrie'), (229, 'Tadjikistan'), (230, 'Taïwan'), (231, 'Tanzanie'), (232, 'Tchad'), (233, 'Terres australes françaises'), (234, "Territoire britannique de l'Océan Indien"), (235, 'Thaïlande'), (236, 'Timor Oriental'), (237, 'Togo'), (238, 'Tokélaou'), (239, 'Tonga'), (240, 'Trinité-et-Tobago'), (241, 'Tunisie'), (242, 'Turkménistan'), (243, 'Turquie'), (244, 'Tuvalu'), (245, 'Ukraine'), (246, 'Union européenne'), (247, 'Uruguay'), (248, 'Vanuatu'), (249, 'Venezuela'), (250, 'Viêt Nam'), (251, 'Wake Island'), (252, 'Wallis-et-Futuna'), (253, 'West Bank'), (254, 'Yémen'), (255, 'Zambie'), (256, 'Zimbabwe')], null=True, verbose_name='Pays actuel')),
                ('city', models.CharField(blank=True, help_text='Visible uniquement par les utilisateurs connectés.', max_length=100, verbose_name='Ville actuelle')),
                ('website_name', models.CharField(blank=True, help_text='Cela peut être une page Facebook, un compte Twitter ou votre site personnel.', max_length=200, verbose_name='Nom du site web')),
                ('website_url', models.URLField(blank=True, help_text="L'adresse doit débuter par http:// ou https://", verbose_name='Adresse du site web')),
                ('birthdate', models.DateField(blank=True, help_text='Visible uniquement par les utilisateurs connectés.', null=True, verbose_name='Date de naissance')),
                ('avatar', models.URLField(blank=True, help_text='Des exemples d\'avatars sont disponibles sur <a href="https://www.avatarsdb.com">AvatarsDB</a>. Vous pouvez également utiliser <a href="https://www.gravatar.com">Gravatar</a> pour héberger et centraliser votre avatar. Vous pouvez également envoyer un avatar depuis votre disque en utilisant le champ ci-dessous.', validators=[django.core.validators.URLValidator(schemes=['http', 'https'])], verbose_name="Adresse de l'avatar, débutant par https://")),
                ('last_visit', models.DateTimeField(blank=True, null=True, verbose_name='Dernière visite')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('theme', models.CharField(blank=True, choices=[('style', 'Lexpage'), ('style_nowel', 'Nowel'), ('style_st_patrick', 'Saint-Patrick')], help_text='Laissez vide pour adopter automatiquement le thème du moment.', max_length=16, null=True, verbose_name='Thème')),
            ],
            options={
                'permissions': (('can_see_details', 'Peut voir les détails des profils'),),
                'ordering': ['user__date_joined'],
                'get_latest_by': 'user__date_joined',
            },
        ),
        migrations.CreateModel(
            name='ActiveUser',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Utilisateurs actifs',
                'proxy': True,
                'verbose_name': 'Utilisateur actif',
                'ordering': ['date_joined'],
                'get_latest_by': 'date_joined',
            },
            bases=('auth.user',),
        ),
    ]
