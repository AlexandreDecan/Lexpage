// Taken from django-websocket-redis/ws4redis/static/js/ws4redis.js
// License: MIT
function WebsocketClient(e,n){"use strict"
function o(e){console.log("connecting to "+e)
try{d=n.Deferred(),h=new WebSocket(e),h.onopen=s,h.onmessage=l,h.onerror=i,h.onclose=a,_=null}catch(o){d.reject(new Error(o))}}function t(){try{if(m++,m>3)throw c(),new Error("Too many missed heartbeats.")
console.log("sending heartbeat"),h.send(f.heartbeat_msg)}catch(e){clearInterval(b),b=null,console.warn("Closing connection. Reason: "+e.message),h.close()}}function r(){"function"==typeof f.on_heartbeat&&f.on_heartbeat()}function c(){"function"==typeof f.on_missed_heartbeat&&f.on_missed_heartbeat()}function s(){console.log("connected"),"function"==typeof f.on_open&&f.on_open(),d.resolve(),f.heartbeat_msg&&null===b&&(m=0,b=setInterval(t,5e3))}function a(e){if(console.log("connection closed"),"function"==typeof f.on_close&&f.on_close(e.data),!_){var n=u(g)
_=setTimeout(function(){g++,o(h.url)},n)}}function i(e){console.error("Websocket connection is broken!"),d.reject(new Error(e)),"function"==typeof f.on_error&&f.on_error(e.data)}function l(e){if(f.heartbeat_msg&&e.data===f.heartbeat_msg)m=0,r()
else if("function"==typeof f.receive_message)return f.receive_message(e.data)}function u(e){var n=1e3*(Math.pow(2,e)-1)
return n>3e4&&(n=3e4),Math.random()*n}var f,h,d,_,g=1,b=null,m=0
if(void 0===this)return new WebsocketClient(e,n)
if(void 0===e.uri)throw new Error("No Websocket URI in options")
void 0===n&&(n=jQuery),f=n.extend({heartbeat_msg:null},e),o(f.uri),this.reconnect=function(){g=1,_&&clearInterval(_)
try{h.close()}catch(e){console.log("could not close ws:"+e.message)}o(h.url+"&r")},this.send_message=function(e){h.send(e)}}